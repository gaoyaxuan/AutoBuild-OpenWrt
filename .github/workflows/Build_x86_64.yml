
name: Build_x86_64

on:
  release:
    types: [published]

  push:
    branches:
      - master

#  schedule:
#    - cron: 0 8 * * 5

  watch:
    types: [started]

jobs:
  build:
    timeout-minutes: 1000
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php \
          /usr/local/lib/android \
          /opt/ghc \
          /etc/apt/sources.list.d/*
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify git gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        echo "-----------------disk-------------------"
        df -Th

    - name: Clone source code
      env:
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git docker https://github.com/lisaac/luci-lib-docker.git" >> ./feeds.conf.default
        echo "src-git dockerman https://github.com/lisaac/luci-app-dockerman.git" >> ./feeds.conf.default
        echo "src-git kenzok https://github.com/kenzok8/openwrt-packages" >> ./feeds.conf.default
        echo "src-git small https://github.com/kenzok8/small" >> ./feeds.conf.default

    - name: Import external feeds
      working-directory: ./openwrt
      run: |
        git clone https://github.com/destan19/OpenAppFilter.git  package/OpenAppFilter/
        git clone https://github.com/project-lede/luci-app-godproxy.git  package/luci-app-godproxy/
        git clone https://github.com/zzsj0928/luci-app-pushbot.git  package/luci-app-pushbot/

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig

    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc) V=s
        make download -j$(nproc) V=s

    - name: Build firmware
      working-directory: ./openwrt
      timeout-minutes: 900
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Gzip
      run: |
        tar -czvf Openwrt.tar.gz openwrt/bin

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_id }}
        release_name: Release ${{ github.run_id }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Openwrt.tar.gz
        asset_name: Openwrt.tar.gz
        asset_content_type: application/gzip
